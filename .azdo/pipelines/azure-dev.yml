# Run when commits are pushed to mainline branch (main or master)
# Set this to the mainline branch you are using
trigger:
  - main
  - master

# Azure Pipelines workflow to deploy to Azure using azd
# To configure required secrets and service connection for connecting to Azure, simply run `azd pipeline config --provider azdo`
# Task "Install azd" needs to install setup-azd extension for azdo - https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azd
# See below for alternative task to install azd if you can't install above task in your organization

pool:
  vmImage: ubuntu-latest

steps:
  - task: setup-azd@0
    displayName: Install azd

  # If you can't install above task in your organization, you can comment it and uncomment below task to install azd
  # - task: Bash@3
  #   displayName: Install azd
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       curl -fsSL https://aka.ms/install-azd.sh | bash

  # azd delegate auth to az to use service connection with AzureCLI@2
  - pwsh: |
      azd config set auth.useAzCliAuth "true"
    displayName: Configure AZD to Use AZ CLI Authentication.

  - task: AzureCLI@2
    displayName: Provision Infrastructure
    inputs:
      # azconnection is the service connection created by azd. You can change it to any service connection you have in your organization.
      azureSubscription: azconnection
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        azd provision --no-prompt
    env:
      AZURE_SUBSCRIPTION_ID: "80f7f25e-20c9-4f47-9a5a-ae5ede660873"
      AZURE_ENV_NAME: "chatbot"
      AZURE_LOCATION: "westus"
      AZD_INITIAL_ENVIRONMENT_CONFIG: $(AZD_INITIAL_ENVIRONMENT_CONFIG)
      AZURE_OPENAI_SERVICE: "cog-luc2lbp7pdpvs"
      AZURE_OPENAI_API_VERSION: $(AZURE_OPENAI_API_VERSION)
      AZURE_OPENAI_RESOURCE_GROUP: "rg-chatbot"
      AZURE_DOCUMENTINTELLIGENCE_SERVICE: "cog-di-luc2lbp7pdpvs"
      AZURE_DOCUMENTINTELLIGENCE_RESOURCE_GROUP: "rg-chatbot"
      AZURE_DOCUMENTINTELLIGENCE_SKU: $(AZURE_DOCUMENTINTELLIGENCE_SKU)
      AZURE_DOCUMENTINTELLIGENCE_LOCATION: "westus"
      AZURE_SEARCH_INDEX: "gptkbindex"
      AZURE_SEARCH_SERVICE: "gptkb-luc2lbp7pdpvs"
      AZURE_SEARCH_SERVICE_RESOURCE_GROUP: "rg-chatbot"
      AZURE_SEARCH_SERVICE_LOCATION: "westus"
      AZURE_SEARCH_SERVICE_SKU: $(AZURE_SEARCH_SERVICE_SKU)
      AZURE_SEARCH_QUERY_LANGUAGE: $(AZURE_SEARCH_QUERY_LANGUAGE)
      AZURE_SEARCH_QUERY_SPELLER: $(AZURE_SEARCH_QUERY_SPELLER)
      AZURE_SEARCH_SEMANTIC_RANKER: "free"
      AZURE_STORAGE_ACCOUNT: "stluc2lbp7pdpvs"
      AZURE_STORAGE_RESOURCE_GROUP: "rg-chatbot"
      AZURE_STORAGE_SKU: $(AZURE_STORAGE_SKU)
      AZURE_APP_SERVICE_SKU: $(AZURE_APP_SERVICE_SKU)
      AZURE_OPENAI_CHATGPT_MODEL: "gpt-35-turbo"
      AZURE_OPENAI_CHATGPT_DEPLOYMENT: "chat"
      AZURE_OPENAI_CHATGPT_DEPLOYMENT_CAPACITY: $(AZURE_OPENAI_CHATGPT_DEPLOYMENT_CAPACITY)
      AZURE_OPENAI_CHATGPT_DEPLOYMENT_VERSION: $(AZURE_OPENAI_CHATGPT_DEPLOYMENT_VERSION)
      AZURE_OPENAI_CHATGPT_DEPLOYMENT_SKU: $(AZURE_OPENAI_CHATGPT_DEPLOYMENT_SKU)
      AZURE_OPENAI_EMB_MODEL_NAME: "text-embedding-ada-002"
      AZURE_OPENAI_EMB_DEPLOYMENT: "embedding"
      AZURE_OPENAI_EMB_DEPLOYMENT_CAPACITY: $(AZURE_OPENAI_EMB_DEPLOYMENT_CAPACITY)
      AZURE_OPENAI_EMB_DEPLOYMENT_VERSION: $(AZURE_OPENAI_EMB_DEPLOYMENT_VERSION)
      AZURE_OPENAI_EMB_DEPLOYMENT_SKU: $(AZURE_OPENAI_EMB_DEPLOYMENT_SKU)
      AZURE_OPENAI_EMB_DIMENSIONS: $(AZURE_OPENAI_EMB_DIMENSIONS)
      AZURE_OPENAI_GPT4V_MODEL: "gpt-4o"
      AZURE_OPENAI_GPT4V_DEPLOYMENT: "gpt-4o"
      AZURE_OPENAI_GPT4V_DEPLOYMENT_CAPACITY: $(AZURE_OPENAI_GPT4V_DEPLOYMENT_CAPACITY)
      AZURE_OPENAI_GPT4V_DEPLOYMENT_VERSION: $(AZURE_OPENAI_GPT4V_DEPLOYMENT_VERSION)
      AZURE_OPENAI_GPT4V_DEPLOYMENT_SKU: $(AZURE_OPENAI_GPT4V_DEPLOYMENT_SKU)
      OPENAI_HOST: "azure"
      OPENAI_API_KEY: $(OPENAI_API_KEY)
      OPENAI_ORGANIZATION: $(OPENAI_ORGANIZATION)
      AZURE_USE_APPLICATION_INSIGHTS: $(AZURE_USE_APPLICATION_INSIGHTS)
      AZURE_APPLICATION_INSIGHTS: $(AZURE_APPLICATION_INSIGHTS)
      AZURE_APPLICATION_INSIGHTS_DASHBOARD: $(AZURE_APPLICATION_INSIGHTS_DASHBOARD)
      AZURE_LOG_ANALYTICS: $(AZURE_LOG_ANALYTICS)
      USE_VECTORS: $(USE_VECTORS)
      USE_GPT4V: $(USE_GPT4V)
      AZURE_VISION_ENDPOINT: $(AZURE_VISION_ENDPOINT)
      VISION_SECRET_NAME: $(VISION_SECRET_NAME)
      AZURE_COMPUTER_VISION_SERVICE: $(AZURE_COMPUTER_VISION_SERVICE)
      AZURE_COMPUTER_VISION_RESOURCE_GROUP: $(AZURE_COMPUTER_VISION_RESOURCE_GROUP)
      AZURE_COMPUTER_VISION_LOCATION: $(AZURE_COMPUTER_VISION_LOCATION)
      AZURE_COMPUTER_VISION_SKU: $(AZURE_COMPUTER_VISION_SKU)
      ENABLE_LANGUAGE_PICKER: $(ENABLE_LANGUAGE_PICKER)
      USE_SPEECH_INPUT_BROWSER: $(USE_SPEECH_INPUT_BROWSER)
      USE_SPEECH_OUTPUT_BROWSER: $(USE_SPEECH_OUTPUT_BROWSER)
      USE_SPEECH_OUTPUT_AZURE: $(USE_SPEECH_OUTPUT_AZURE)
      AZURE_SPEECH_SERVICE: $(AZURE_SPEECH_SERVICE)
      AZURE_SPEECH_SERVICE_RESOURCE_GROUP: $(AZURE_SPEECH_SERVICE_RESOURCE_GROUP)
      AZURE_SPEECH_SERVICE_LOCATION: $(AZURE_SPEECH_SERVICE_LOCATION)
      AZURE_SPEECH_SERVICE_SKU: $(AZURE_SPEECH_SERVICE_SKU)
      AZURE_KEY_VAULT_NAME: $(AZURE_KEY_VAULT_NAME)
      AZURE_USE_AUTHENTICATION: "true"
      AZURE_ENFORCE_ACCESS_CONTROL: $(AZURE_ENFORCE_ACCESS_CONTROL)
      AZURE_ENABLE_GLOBAL_DOCUMENT_ACCESS: $(AZURE_ENABLE_GLOBAL_DOCUMENT_ACCESS)
      AZURE_ENABLE_UNAUTHENTICATED_ACCESS: $(AZURE_ENABLE_UNAUTHENTICATED_ACCESS)
      AZURE_TENANT_ID: "84c31ca0-ac3b-4eae-ad11-519d80233e6f"
      AZURE_AUTH_TENANT_ID: $(AZURE_AUTH_TENANT_ID)
      AZURE_SERVER_APP_ID: "c439165e-d6e4-4b70-95af-9540df1e9ed2"
      AZURE_CLIENT_APP_ID: "a269392c-6ae2-45be-8234-9cf4c7a5c4e8"
      ALLOWED_ORIGIN: $(ALLOWED_ORIGIN)
      AZURE_SERVER_APP_SECRET: "e453d053-70b1-4170-9d14-15e82b537cac"
      AZURE_CLIENT_APP_SECRET: $(AZURE_CLIENT_APP_SECRET)
      AZURE_ADLS_GEN2_STORAGE_ACCOUNT: $(AZURE_ADLS_GEN2_STORAGE_ACCOUNT)
      AZURE_ADLS_GEN2_FILESYSTEM_PATH: $(AZURE_ADLS_GEN2_FILESYSTEM_PATH)
      AZURE_ADLS_GEN2_FILESYSTEM: $(AZURE_ADLS_GEN2_FILESYSTEM)
      DEPLOYMENT_TARGET: $(DEPLOYMENT_TARGET)
      AZURE_CONTAINER_APPS_WORKLOAD_PROFILE: $(AZURE_CONTAINER_APPS_WORKLOAD_PROFILE)
      USE_CHAT_HISTORY_BROWSER: $(USE_CHAT_HISTORY_BROWSER)

  - task: AzureCLI@2
    displayName: Deploy Application
    inputs:
      azureSubscription: azconnection
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        azd deploy --no-prompt
